'use client';

import { useEffect } from 'react';
import { motion, AnimatePresence } from 'framer-motion';
import { useQwizStore } from '@/lib/qwiz/store';
import { calculateTotals, formatPrice, getPricingBreakdown } from '@/lib/qwiz/pricing';

export function PriceCounter() {
  const { service, features, maintenance, totals, setTotals, contact } = useQwizStore();

  // Recalculate when service, features, or maintenance change
  useEffect(() => {
    const newTotals = calculateTotals(service, features, contact?.rush, maintenance);
    setTotals(newTotals);
  }, [service, features, contact?.rush, maintenance, setTotals]);

  if (!totals || totals.total === 0) return null;

  const breakdown = getPricingBreakdown(totals);

  return (
    <AnimatePresence>
      <motion.div
        initial={{ opacity: 0, y: 100 }}
        animate={{ opacity: 1, y: 0 }}
        exit={{ opacity: 0, y: 100 }}
        className="fixed bottom-0 left-0 right-0 z-50 p-4 md:p-6"
      >
        <div className="max-w-4xl mx-auto bg-gradient-to-r from-cyan-500/20 to-blue-500/20 backdrop-blur-xl border border-cyan-500/30 rounded-2xl p-6 shadow-2xl">
          <div className="flex flex-col md:flex-row items-start md:items-center justify-between gap-4">
            <div className="flex-1">
              <div className="text-sm text-white/60 mb-1">
                Estimated Project Cost
              </div>
              <div className="space-y-1">
                {breakdown.map((line, idx) => (
                  <div key={idx} className="text-sm text-white/80">
                    {line}
                  </div>
                ))}
              </div>
            </div>

            <div className="flex items-end gap-6">
              <div>
                <div className="text-sm text-white/60 mb-1">Total</div>
                <div className="text-3xl font-bold text-white">
                  {formatPrice(totals.total)}
                </div>
                {totals.recurring && (
                  <div className="text-sm text-cyan-400 mt-1">
                    + {formatPrice(totals.monthly)}/mo
                  </div>
                )}
              </div>

              <div className="text-right">
                <div className="text-sm text-white/60 mb-1">Deposit</div>
                <div className="text-xl font-bold text-cyan-400">
                  {formatPrice(totals.deposit)}
                </div>
              </div>
            </div>
          </div>

          {totals.rush > 0 && (
            <div className="mt-4 pt-4 border-t border-white/10">
              <div className="flex items-center gap-2 text-yellow-400 text-sm">
                <span>âš¡</span>
                <span>Rush delivery selected - {formatPrice(totals.rush)} rush fee applied</span>
              </div>
            </div>
          )}
        </div>
      </motion.div>
    </AnimatePresence>
  );
}
