import { SERVICES, FEATURES, RUSH_MULTIPLIER, DEPOSIT_PERCENT, MIN_DEPOSIT, type Service, type FeatureId } from './config';

export interface FeatureSelection {
  id: FeatureId;
  quantity?: number;
}

export interface Totals {
  base: number;
  addons: number;
  rush: number;
  monthly: number;
  subtotal: number;
  total: number;
  deposit: number;
  recurring: boolean;
}

/**
 * Calculate totals from service and selected features
 */
export function calculateTotals(
  service: Service | null,
  features: FeatureSelection[],
  rush: boolean = false,
  maintenance: boolean = false
): Totals {
  let base = 0;
  let monthly = 0;
  let recurring = false;

  // Service base price
  if (service && service !== 'maintenance') {
    const svc = SERVICES[service];
    base = svc.base || 0;
  }

  // Add maintenance monthly fee if selected
  if (maintenance) {
    monthly = SERVICES.maintenance.monthly || 0;
    recurring = true;
  }

  // Add feature prices
  const addons = features.reduce((sum, feat) => {
    const feature = FEATURES.find((f) => f.id === feat.id);
    if (!feature) return sum;
    const qty = feat.quantity || 1;
    return sum + feature.price * qty;
  }, 0);

  const subtotal = base + addons;

  // Rush fee (15%)
  const rushFee = rush ? Math.round(subtotal * (RUSH_MULTIPLIER - 1)) : 0;

  const total = subtotal + rushFee;

  // Deposit (25% or $250 minimum)
  const deposit = Math.max(MIN_DEPOSIT, Math.round(total * DEPOSIT_PERCENT));

  return {
    base,
    addons,
    rush: rushFee,
    monthly,
    subtotal,
    total,
    deposit,
    recurring,
  };
}

/**
 * Format price in cents to display string
 */
export function formatPrice(cents: number): string {
  return new Intl.NumberFormat('en-US', {
    style: 'currency',
    currency: 'USD',
  }).format(cents / 100);
}

/**
 * Get pricing breakdown as human-readable lines
 */
export function getPricingBreakdown(totals: Totals): string[] {
  const lines: string[] = [];

  if (totals.base > 0) {
    lines.push(`Base project: ${formatPrice(totals.base)}`);
  }

  if (totals.addons > 0) {
    lines.push(`Features & add-ons: ${formatPrice(totals.addons)}`);
  }

  if (totals.rush > 0) {
    lines.push(`Rush delivery (15%): ${formatPrice(totals.rush)}`);
  }

  if (totals.monthly > 0) {
    lines.push(`Monthly: ${formatPrice(totals.monthly)}/mo`);
  }

  return lines;
}
